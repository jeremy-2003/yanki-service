openapi: 3.0.3
info:
  title: Yanki Service API
  description: API for managing the Yanki mobile wallet.
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/yanki
    description: Local environment
paths:
  /login:
    post:
      summary: Authenticate a user and return a JWT token.
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        "200":
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponseString'
        "401":
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponseString'
  /register:
    post:
      summary: Register a new Yanki wallet.
      operationId: registerWallet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/YankiWalletRequest'
      responses:
        "201":
          description: Wallet registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponseYankiWallet'
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponseYankiWallet'
  /associate-card:
    post:
      summary: Associate a debit card with a Yanki wallet.
      operationId: associateCard
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardLinkRequestedEvent'
      responses:
        "200":
          description: Card association request successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponseCardLink'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponseCardLink'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponseCardLink'
  /transaction:
    post:
      summary: Process a Yanki transaction.
      operationId: processTransaction
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/YankiTransactionRequest'
      responses:
        "200":
          description: Transaction processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponseObject'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponseObject'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponseObject'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponseObject'
  /{id}:
    get:
      summary: Get a Yanki wallet by its ID.
      operationId: getWalletById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Wallet found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponseYankiWallet'
        "404":
          description: Wallet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponseYankiWallet'
    put:
      summary: Update a Yanki wallet.
      operationId: updateWallet
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/YankiWalletRequest'
      responses:
        "200":
          description: Wallet updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponseYankiWallet'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponseYankiWallet'
        "404":
          description: Wallet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponseYankiWallet'
    delete:
      summary: Delete a Yanki wallet.
      operationId: deleteWallet
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Wallet deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponseObject'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponseObject'
        "404":
          description: Wallet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponseObject'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    BaseResponseString:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        data:
          type: string
    BaseResponseObject:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        data:
          type: object
    BaseResponseYankiWallet:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        data:
          $ref: '#/components/schemas/YankiWalletCustom'
    BaseResponseCardLink:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        data:
          $ref: '#/components/schemas/CardLinkRequestedEvent'
    LoginRequest:
      type: object
      properties:
        phoneNumber:
          type: string
        documentNumber:
          type: string
    YankiWalletRequest:
      type: object
      properties:
        phoneNumber:
          type: string
        documentNumber:
          type: string
        imei:
          type: string
        email:
          type: string
    CardLinkRequestedEvent:
      type: object
      properties:
        phoneNumber:
          type: string
        cardNumber:
          type: string
        documentNumber:
          type: string
    YankiTransactionRequest:
      type: object
      properties:
        senderPhoneNumber:
          type: string
        receiverPhoneNumber:
          type: string
        amount:
          type: number
          format: double
    YankiWalletCustom:
      type: object
      properties:
        id:
          type: string
        phoneNumber:
          type: string
        documentNumber:
          type: string
        imei:
          type: string
        email:
          type: string
        linkedCard:
          type: string
        balance:
          type: number
          format: double
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time